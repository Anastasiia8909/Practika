import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

driver = webdriver.Chrome()


@pytest.fixture(autouse=True)
def testing():
  pytest.driver = webdriver.Chrome('chromedriver.exe')
  pytest.driver.get('http://petfriends.skillfactory.ru/login')
  yield
  pytest.driver.quit()



def test_show_my_pets():
   pytest.driver.find_element_by_id('email').send_keys('kotlubay.nastya89@gmail.com')
   pytest.driver.find_element_by_id('pass').send_keys('amsax01')
   pytest.driver.find_element_by_css_selector('button[type="submit"]').click()
    # Проверяем, что мы оказались на главной странице пользователя
   assert pytest.driver.find_element_by_tag_name('h1').text == "PetFriends"




def test_all_pets_is_presented():
   pytest.driver.find_element_by_id('email').send_keys('kotlubay.nastya89@gmail.com')
   pytest.driver.find_element_by_id('pass').send_keys('amsax01')
   pytest.driver.find_element_by_css_selector('button[type="submit"]').click()
   # Нажимаем на кнопку, чтобы открыть страницу со своими питомцами
   pytest.driver.find_element_by_link_text('Мои питомцы').click()
   # Сохраняем в переменную  элементы статистики
   statistics = pytest.driver.find_elements_by_css_selector(".\\.col-sm-4.left")
   # Получаем количество питомцев из данных статистики
   number = statistics[0].text.split('\n')
   number = number[1].split(' ')
   number = int(number[1])
   # Находим питомцев на странице
   pets = WebDriverWait(pytest.driver, 5).until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'tbody > tr')))
   # сравниваем количество питомцев на странице с данными статистики
   for i in range(len(pets)):
      assert len(pets) == number

def test_more_photo_of_pets():
   pytest.driver.find_element_by_id('email').send_keys('kotlubay.nastya89@gmail.com')
   pytest.driver.find_element_by_id('pass').send_keys('amsax01')
   pytest.driver.find_element_by_css_selector('button[type="submit"]').click()
   # Нажимаем на кнопку, чтобы открыть страницу со своими питомцами
   pytest.driver.find_element_by_link_text('Мои питомцы').click()
   # Задаем время
   pytest.driver.implicitly_wait(5)
   images = pytest.driver.find_elements_by_css_selector('th > img')
   count = 0
   for i in range(len(images)):
      if images[i].get_attribute('src'):
         count += 1
   assert count >= (len(images) / 2)


def test_all_pets_have_name_age_breed():
   pytest.driver.find_element_by_id('email').send_keys('kotlubay.nastya89@gmail.com')
   pytest.driver.find_element_by_id('pass').send_keys('amsax01')
   pytest.driver.find_element_by_css_selector('button[type="submit"]').click()
   # Нажимаем на кнопку, чтобы открыть страницу со своими питомцами
   pytest.driver.find_element_by_link_text('Мои питомцы').click()
   pytest.driver.implicitly_wait(8)
   # Находим питомцев на странице
   pets = pytest.driver.find_elements_by_css_selector('tbody > tr')
   names = pytest.driver.find_elements_by_css_selector('tr > td:nth-child(2)')
   count_names = 0
   for i in range(len(names)):
      if names[i].text != '':
         count_names += 1

   age = pytest.driver.find_elements_by_css_selector('tr > td:nth-child(4)')
   count_age = 0
   for i in range(len(age)):
      if age [i].text != '':
         count_age += 1

   breed = pytest.driver.find_elements_by_css_selector('tr > td:nth-child(3)')
   count_breed = 0
   for i in range(len(breed)):
      if names[i].text != '':
         count_breed += 1

   for i in range(len(pets)):
      assert len(pets) == count_names and len(pets) == count_breed and len(pets) == count_age


def test_all_pets_have_unique_names():
   pytest.driver.find_element_by_id('email').send_keys('kotlubay.nastya89@gmail.com')
   pytest.driver.find_element_by_id('pass').send_keys('amsax01')
   pytest.driver.find_element_by_css_selector('button[type="submit"]').click()
   # Нажимаем на кнопку, чтобы открыть страницу со своими питомцами
   pytest.driver.find_element_by_link_text('Мои питомцы').click()
   pytest.driver.implicitly_wait(7)
   names = pytest.driver.find_elements_by_css_selector('tr > td:nth-child(2)')
   # Сравниваем имена питомцев
   for i in range(len(names) - 1):
      for j in range(i + 1, len(names)):
         assert names[i].text != names[j].text


def test_no_dublicate_pets():
   pytest.driver.find_element_by_id('email').send_keys('kotlubay.nastya89@gmail.com')
   pytest.driver.find_element_by_id('pass').send_keys('amsax01')
   pytest.driver.find_element_by_css_selector('button[type="submit"]').click()
   pytest.driver.find_element_by_link_text('Мои питомцы').click()
   pytest.driver.implicitly_wait(7)

   # Находим всех питомцев
   pets = WebDriverWait(pytest.driver, 6).until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'tbody > tr')))
   # Сравниваем их между собой
   for i in range(len(pets)):
      for j in range(i + 1, len(pets)):
         assert pets[i].text != pets[j].text

